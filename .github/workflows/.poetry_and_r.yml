name: .Poetry_R

on:
  workflow_call:
    inputs:
      python_version:
        description: python version to use
        required: true
        type: string
      poetry_command:
        description: poetry command to run
        required: true
        type: string
      working_directory:
        description: directory to run command in
        required: true
        type: string

jobs:
  install-and-cache:
    name: Install and cache poetry
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        python-version: ${{ inputs.python_version }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install ubuntu pre-requisites (api)
        # The python gdal and R component relies on libgdal-dev being installed.
        # cffdrs requires libudunits2-dev
        run: |
          sudo apt-get update
          sudo apt-get -y install libgdal-dev libudunits2-dev

      - name: Setup Python ${{ matrix.python-version }} (api)
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache poetry installer
        uses: actions/cache@v4
        id: cache-poetry-installer
        env:
          cache-name: cache-poetry-installer
        with:
          path: "~/poetry_installer"
          key: "poetry-installer-1.6.1"

      - name: Download poetry installer
        if: steps.cache-poetry-installer.outputs.cache-hit != 'true'
        run: |
          echo
          mkdir ~/poetry_installer
          curl -sSL https://install.python-poetry.org > ~/poetry_installer/install-poetry.py

      - name: Install poetry (api)
        run: |
          cd ~/poetry_installer
          python install-poetry.py --version 1.6.1
          poetry config virtualenvs.create true
          poetry config virtualenvs.in-project false

      # poetry cache folder: /home/runner/.cache/pypoetry
      - name: Cache poetry
        uses: actions/cache@v4
        env:
          cache-name: cache-poetry
        with:
          path: ~/.cache/pypoetry
          key: ${{ runner.os }}-poetry-prune-cache-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-prune-cache-

      - name: Cache .venv
        id: cache-venv
        uses: actions/cache@v4
        with:
          path: ~/work/wps/wps/api/.venv
          key: ${{ runner.os }}-venv-poetry-1.6.1-${{ hashFiles('**/poetry.lock') }}

      - name: Install python dependencies using poetry (api)
        if: steps.cache-venv.outputs.cache-hit != 'true'
        working-directory: ${{ inputs.poetry_command }}
        run: |
          poetry run python -m pip install --upgrade pip
          poetry install
          poetry run python -m pip install gdal==$(gdal-config --version)
      - name: Run poetry command
        # We used to be able to do linting before installing gdal, but it's not possible anymore.
        # We can however place it ahead of the R installs.
        working-directory: ${{ inputs.poetry_command }}
        run: ${{ inputs.poetry_command }}
