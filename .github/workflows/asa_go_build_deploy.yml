name: Publish ASA Go

env:
  appBuildNumber: ${{ github.run_number }}
  appBuildVersion: "1.0.0"

permissions:
  contents: read

on:
  push:
    branches:
      - task/build-and-deploy-asa-go
  workflow_dispatch:

jobs:
  check-secrets:
    runs-on: ubuntu-22.04
    steps:
        - name: Check secrets
          shell: bash
          run: |
            required_env_vars=(
            "CERTIFICATE"
            "KEYCHAIN_PASSWD"
            # "PROVISIONING_PROFILE"
            )
            for var in "${required_env_vars[@]}"; do
            if [ -z "${!var}" ]; then
                echo "error: $var is not set."
                exit 1
            fi
            done
          env:
            CERTIFICATE: ${{ secrets.APPLE_APP_STORE_BUILD_CERTIFICATE_BASE64 }}
            KEYCHAIN_PASSWD: ${{ secrets.APPLE_APP_STORE_BUILD_CERTIFICATE_PASSWD }}
            # PROVISIONING_PROFILE: ${{ secrets.BUILD_PROVISION_PROFILE_BASE64 }}
  build-and-publish:
    name: Build and deploy 
    needs: [check-secrets]
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Ionic CLI
        working-directory: ./mobile/asa-go
        run: npm install -g @ionic/cli
      - uses: actions/cache@v4
        id: asa-go-cache
        with:
          path: |
            mobile/asa-go/node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
      - uses: actions/cache@v4
        id: asa-go-keycloak-cache
        with:
          path: |
            mobile/keycloak/node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
      - name: Install keycloak plugin
        working-directory: ./mobile/keycloak
        if: steps.asa-go-keycloak-cache.outputs.cache-hit != 'true'
        run: yarn install
      - name: Install dependencies
        working-directory: ./mobile/asa-go
        if: steps.asa-go-cache.outputs.cache-hit != 'true'
        run: yarn install
      - name: Create environment settings
        working-directory: ./mobile/asa-go
        env:
          VITE_API_BASE_URL: ${{ secrets.VITE_API_BASE_URL }}
          VITE_KEYCLOAK_AUTH_URL: ${{ secrets.VITE_KEYCLOAK_AUTH_URL }}
          VITE_KEYCLOAK_REALM: ${{ secrets.VITE_KEYCLOAK_REALM }}
          VITE_KEYCLOAK_CLIENT: ${{ secrets.VITE_KEYCLOAK_CLIENT }}
          VITE_PMTILES_BUCKET: ${{ secrets.VITE_PMTILES_BUCKET }}
          VITE_MUI_LICENSE_KEY: ${{ secrets.VITE_MUI_LICENSE_KEY }}
        run: |
          echo "VITE_API_BASE_URL=${VITE_API_BASE_URL}" >.env.production
          echo "VITE_KEYCLOAK_AUTH_URL=${VITE_KEYCLOAK_AUTH_URL}" >>.env.production
          echo "VITE_KEYCLOAK_REALM=${VITE_KEYCLOAK_REALM}" >>.env.production
          echo "VITE_KEYCLOAK_CLIENT=${VITE_KEYCLOAK_CLIENT}" >>.env.production
          echo "VITE_PMTILES_BUCKET=${VITE_PMTILES_BUCKET}" >>.env.production
          echo "VITE_MUI_LICENSE_KEY=${VITE_MUI_LICENSE_KEY}" >>.env.production

      - name: Install the Apple certificate and provisioning profile
        env:
          # The first two keys are from the bcgov organization secrets
          BUILD_CERTIFICATE_BASE64: ${{ secrets.APPLE_APP_STORE_BUILD_CERTIFICATE_BASE64 }}
          P12_PASSWORD: ${{ secrets.APPLE_APP_STORE_BUILD_CERTIFICATE_PASSWD }}
          # These two keys are from your app's repo secrets
          BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.IOS_PROVISION_PROFILE_BASE64 }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
        run: |
          # create variables
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

          # import certificate and provisioning profile from secrets
          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode --output $CERTIFICATE_PATH
          echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode --output $PP_PATH

          # create temporary keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

          # import certificate to keychain
          security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH

          # apply provisioning profile
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles  
      - name: Bump Build Number
        working-directory: mobile/asa-go/ios/App
        env:
          CURRENT_PROJECT_VERSION: ${{ env.appBuildNumber }}
          MARKETING_VERSION: ${{ env.appBuildVersion }}
        run: |
          agvtool new-version ${CURRENT_PROJECT_VERSION} && \
          agvtool new-marketing-version ${MARKETING_VERSION}
      - name: Build Capacitor and Sync
        working-directory: ./mobile/asa-go
        run: |
            yarn build:prod
            yarn cap sync ios
      - name: Build For Release
        run: |
          xcodebuild \
          -workspace mobile/asa-go/ios/App/App.xcworkspace \
          -scheme "ASA Go" \
          -configuration Release \
          -destination "generic/platform=iOS" \
          -derivedDataPath ${{ runner.temp }}/DerivedData \
          -archivePath ${{ runner.temp }}/DerivedData/App.xcarchive \
          -verbose \
          archive
      - name: Export Archive
        # This is the step that signs the build
        run: |
          xcodebuild \
          -exportArchive \
          -archivePath ${{ runner.temp }}/DerivedData/App.xcarchive \
          -exportPath ${{ runner.temp }}/Export \
          -exportOptionsPlist mobile/asa-go/ios/App/exportOptions.plist \
          -verbose