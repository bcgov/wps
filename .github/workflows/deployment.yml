name: Deployment

on:
  pull_request:
    branches:
      - main

jobs:
  prepare-database-ocp4:
    name: Prepare Dev Database (OCP4)
    runs-on: ubuntu-latest
    steps:
      - name: Set Variables
        shell: bash
        run: |
          echo "SUFFIX=pr-${{ github.event.number }}" >> $GITHUB_ENV

      - name: Checkout
        uses: actions/checkout@v2

      - name: Deploy PostGIS instance
        uses: bcgov/openshift-launchpad-deployment@v1.2
        with:
          AUTH_TOKEN: ${{ secrets.OC4_DEV_TOKEN }}
          SCRIPT: PROJ_TARGET=e1e498-dev IMAGE_STREAM_NAMESPACE=e1e498-tools openshift/scripts/oc_provision_db.sh ${SUFFIX} apply

  prepare-database:
    name: Prepare Dev Database
    runs-on: ubuntu-latest
    steps:
      - name: Set Variables
        shell: bash
        run: |
          echo "SUFFIX=pr-${{ github.event.number }}" >> $GITHUB_ENV

      - name: Checkout
        uses: actions/checkout@v2

      - name: Deploy PostGIS instance
        uses: bcgov/openshift-launchpad-deployment@v1.1
        with:
          AUTH_TOKEN: ${{ secrets.OC_DEV_TOKEN_EDIT }}
          SCRIPT: EPHEMERAL_STORAGE=True openshift/scripts/oc_provision_db_ocp3.sh ${SUFFIX} apply

  prepare-database-backups:
    name: Prepare Dev Database Backups
    runs-on: ubuntu-latest
    steps:
      - name: Set Variables
        shell: bash
        run: |
          echo "SUFFIX=pr-${{ github.event.number }}" >> $GITHUB_ENV

      - name: Checkout
        uses: actions/checkout@v2

      - name: Prepare Matomo Backup Volume PVC
        uses: bcgov/openshift-launchpad-deployment@v1.1
        with:
          AUTH_TOKEN: ${{ secrets.OC_DEV_TOKEN_EDIT }}
          SCRIPT: openshift/scripts/oc_provision_matomo_backup_pvc.sh ${SUFFIX} apply

      - name: Prepare Matomo Backup Deployment Config
        uses: bcgov/openshift-launchpad-deployment@v1.1
        with:
          AUTH_TOKEN: ${{ secrets.OC_DEV_TOKEN_EDIT }}
          SCRIPT: openshift/scripts/oc_provision_matomo_backup.sh ${SUFFIX} apply

      - name: Prepare Matomo Backup Cronjob
        uses: bcgov/openshift-launchpad-deployment@v1.1
        with:
          AUTH_TOKEN: ${{ secrets.OC_DEV_TOKEN_EDIT }}
          SCRIPT: openshift/scripts/oc_provision_matomo_backup_cronjob.sh ${SUFFIX} apply

  build-and-deploy:
    name: Build, Deploy to Dev & ZAP Baseline Scan
    runs-on: ubuntu-latest
    steps:
      - name: Set Variables
        shell: bash
        run: |
          echo "SUFFIX=pr-${{ github.event.number }}" >> $GITHUB_ENV

      - name: Checkout
        uses: actions/checkout@v2

      - name: Build Image
        uses: bcgov/openshift-launchpad-deployment@v1.1
        with:
          AUTH_TOKEN: ${{ secrets.OC_TOOL_TOKEN_EDIT }}
          SCRIPT: GIT_BRANCH=${GITHUB_HEAD_REF} DOCKER_FILE="Dockerfile.ocp3" openshift/scripts/oc_build.sh ${SUFFIX} apply

      - name: Deploy to Dev
        uses: bcgov/openshift-launchpad-deployment@v1.1
        with:
          AUTH_TOKEN: ${{ secrets.OC_DEV_TOKEN_EDIT }}
          SCRIPT: openshift/scripts/oc_deploy.sh ${SUFFIX} apply

      - name: Hourly actuals cronjob (Marvin)
        uses: bcgov/openshift-launchpad-deployment@v1.1
        with:
          AUTH_TOKEN: ${{ secrets.OC_DEV_TOKEN_EDIT }}
          SCRIPT: openshift/scripts/oc_provision_bcfw_p1_hourly_actuals_cronjob.sh ${SUFFIX} apply

      - name: Noon forecasts cronjob (Bender)
        uses: bcgov/openshift-launchpad-deployment@v1.1
        with:
          AUTH_TOKEN: ${{ secrets.OC_DEV_TOKEN_EDIT }}
          SCRIPT: openshift/scripts/oc_provision_bcfw_p1_forecasts_cronjob.sh ${SUFFIX} apply

      - name: Environment Canada GDPS cronjob (Donald)
        uses: bcgov/openshift-launchpad-deployment@v1.1
        with:
          AUTH_TOKEN: ${{ secrets.OC_DEV_TOKEN_EDIT }}
          SCRIPT: openshift/scripts/oc_provision_ec_gdps_cronjob.sh ${SUFFIX} apply

      - name: Environment Canada HRDPS cronjob (Donald)
        uses: bcgov/openshift-launchpad-deployment@v1.1
        with:
          AUTH_TOKEN: ${{ secrets.OC_DEV_TOKEN_EDIT }}
          SCRIPT: openshift/scripts/oc_provision_ec_hrdps_cronjob.sh ${SUFFIX} apply

      - name: Environment Canada RDPS cronjob (Donald)
        uses: bcgov/openshift-launchpad-deployment@v1.1
        with:
          AUTH_TOKEN: ${{ secrets.OC_DEV_TOKEN_EDIT }}
          SCRIPT: openshift/scripts/oc_provision_ec_rdps_cronjob.sh ${SUFFIX} apply

      # f.y.i.: ZAP Scan must be able to log an issue or it will fail.
      - name: ZAP Scan
        uses: zaproxy/action-baseline@v0.4.0
        with:
          target: "https://wps-pr-${{ github.event.number }}.pathfinder.gov.bc.ca"
          rules_file_name: ".zap/rules.tsv"
          # Do not return failure on warnings - TODO: this has to be resolved!
          cmd_options: "-I"

  build-and-deploy-ocp4:
    name: Build, Deploy to Dev & ZAP Baseline Scan (OCP4)
    runs-on: ubuntu-latest
    steps:
      - name: Set Variables
        shell: bash
        run: |
          echo "SUFFIX=pr-${{ github.event.number }}" >> $GITHUB_ENV

      - name: Checkout
        uses: actions/checkout@v2

      - name: Build Image
        uses: bcgov/openshift-launchpad-deployment@v1.2
        with:
          AUTH_TOKEN: ${{ secrets.OC4_TOOL_TOKEN }}
          SCRIPT: GIT_BRANCH=${GITHUB_HEAD_REF} PROJ_TOOLS="e1e498-tools" PROJ_DEV="e1e498-dev" DOCKER_IMAGE="image-registry.openshift-image-registry.svc:5000/e1e498-tools/uvicorn-gunicorn-fastapi:python3.8-latest" openshift/scripts/oc_build.sh ${SUFFIX} apply

      # - name: Deploy to Dev
      #   uses: Sybrand/openshift-launchpad-deployment@ocp4support
      #   with:
      #     AUTH_TOKEN: ${{ secrets.OC_DEV_TOKEN_EDIT }}
      #     SCRIPT: openshift/scripts/oc_deploy.sh ${SUFFIX} apply

      # - name: Hourly actuals cronjob (Marvin)
      #   uses: Sybrand/openshift-launchpad-deployment@ocp4support
      #   with:
      #     AUTH_TOKEN: ${{ secrets.OC_DEV_TOKEN_EDIT }}
      #     SCRIPT: openshift/scripts/oc_provision_bcfw_p1_hourly_actuals_cronjob.sh ${SUFFIX} apply

      # - name: Noon forecasts cronjob (Bender)
      #   uses: Sybrand/openshift-launchpad-deployment@ocp4support
      #   with:
      #     AUTH_TOKEN: ${{ secrets.OC_DEV_TOKEN_EDIT }}
      #     SCRIPT: openshift/scripts/oc_provision_bcfw_p1_forecasts_cronjob.sh ${SUFFIX} apply

      # - name: Environment Canada GDPS cronjob (Donald)
      #   uses: Sybrand/openshift-launchpad-deployment@ocp4support
      #   with:
      #     AUTH_TOKEN: ${{ secrets.OC_DEV_TOKEN_EDIT }}
      #     SCRIPT: openshift/scripts/oc_provision_ec_gdps_cronjob.sh ${SUFFIX} apply

      # - name: Environment Canada HRDPS cronjob (Donald)
      #   uses: Sybrand/openshift-launchpad-deployment@ocp4support
      #   with:
      #     AUTH_TOKEN: ${{ secrets.OC_DEV_TOKEN_EDIT }}
      #     SCRIPT: openshift/scripts/oc_provision_ec_hrdps_cronjob.sh ${SUFFIX} apply

      # - name: Environment Canada RDPS cronjob (Donald)
      #   uses: Sybrand/openshift-launchpad-deployment@ocp4support
      #   with:
      #     AUTH_TOKEN: ${{ secrets.OC_DEV_TOKEN_EDIT }}
      #     SCRIPT: openshift/scripts/oc_provision_ec_rdps_cronjob.sh ${SUFFIX} apply

      # # f.y.i.: ZAP Scan must be able to log an issue or it will fail.
      # - name: ZAP Scan
      #   uses: zaproxy/action-baseline@v0.4.0
      #   with:
      #     target: "https://wps-pr-${{ github.event.number }}.pathfinder.gov.bc.ca"
      #     rules_file_name: ".zap/rules.tsv"
      #     # Do not return failure on warnings - TODO: this has to be resolved!
      #     cmd_options: "-I"
