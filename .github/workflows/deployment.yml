name: Deployment

on:
  pull_request:
    branches:
      - main

jobs:
  prepare-dev-database:
    name: Prepare Dev Database (OCP4)
    runs-on: ubuntu-latest
    steps:
      - name: Set Variables
        shell: bash
        run: |
          echo "SUFFIX=pr-${{ github.event.number }}" >> $GITHUB_ENV

      - name: Checkout
        uses: actions/checkout@v2

      - name: Deploy PostGIS instance
        shell: bash
        run: |
          oc login "${{ secrets.OPENSHIFT_CLUSTER }}" --token="${{ secrets.OC4_DEV_TOKEN }}"
          EPHEMERAL_STORAGE=True PROJ_TARGET=e1e498-dev APP_USER="wps" IMAGE_STREAM_NAMESPACE=e1e498-tools bash openshift/scripts/oc_provision_db.sh ${SUFFIX} apply

  prepare-dev-database-backups:
    name: Prepare Dev Database Backups (OCP4)
    needs: prepare-dev-database
    runs-on: ubuntu-latest
    steps:
      - name: Set Variables
        shell: bash
        run: |
          echo "SUFFIX=pr-${{ github.event.number }}" >> $GITHUB_ENV

      - name: Checkout
        uses: actions/checkout@v2

      - name: Postgres Backup Deployment Config
        shell: bash
        run: |
          oc login "${{ secrets.OPENSHIFT_CLUSTER }}" --token="${{ secrets.OC4_DEV_TOKEN }}"
          PROJ_TARGET=e1e498-dev PROJ_TOOLS=e1e498-tools IMAGE_NAMESPACE=e1e498-tools EPHEMERAL_STORAGE=True bash openshift/scripts/oc_provision_backup_postgres.sh ${SUFFIX} apply

      - name: Postgres Backup Cronjob
        shell: bash
        run: |
          oc login "${{ secrets.OPENSHIFT_CLUSTER }}" --token="${{ secrets.OC4_DEV_TOKEN }}"
          PROJ_TARGET=e1e498-dev PROJ_TOOLS=e1e498-tools IMAGE_NAMESPACE=e1e498-tools EPHEMERAL_STORAGE=True bash openshift/scripts/oc_provision_backup_postgres_cronjob.sh ${SUFFIX} apply

      - name: Prepare MariaDB Backup Deployment Config
        shell: bash
        run: |
          oc login "${{ secrets.OPENSHIFT_CLUSTER }}" --token="${{ secrets.OC4_DEV_TOKEN }}"
          PROJ_TARGET=e1e498-dev PROJ_TOOLS=e1e498-tools IMAGE_NAMESPACE=e1e498-tools EPHEMERAL_STORAGE=True bash openshift/scripts/oc_provision_backup_mariadb.sh ${SUFFIX} apply

      - name: Prepare MariaDB Backup Cronjob
        shell: bash
        run: |
          oc login "${{ secrets.OPENSHIFT_CLUSTER }}" --token="${{ secrets.OC4_DEV_TOKEN }}"
          PROJ_TARGET=e1e498-dev PROJ_TOOLS=e1e498-tools IMAGE_NAMESPACE=e1e498-tools EPHEMERAL_STORAGE=True bash openshift/scripts/oc_provision_backup_mariadb_cronjob.sh ${SUFFIX} apply

  deploy-dev:
    name: Deploy to Dev & ZAP Baseline Scan (OCP4)
    needs: prepare-dev-database
    runs-on: ubuntu-latest
    steps:
      - name: Set Variables
        shell: bash
        run: |
          echo "SUFFIX=pr-${{ github.event.number }}" >> $GITHUB_ENV

      - name: Checkout
        uses: actions/checkout@v2

      - name: Build Image
        shell: bash
        run: |
          oc login "${{ secrets.OPENSHIFT_CLUSTER }}" --token="${{ secrets.OC4_TOOL_TOKEN }}"
          GIT_BRANCH=${GITHUB_HEAD_REF} PROJ_TOOLS="e1e498-tools" PROJ_DEV="e1e498-dev" DOCKER_IMAGE="image-registry.openshift-image-registry.svc:5000/e1e498-tools/uvicorn-gunicorn-fastapi:python3.8-latest" bash openshift/scripts/oc_build.sh ${SUFFIX} apply

      - name: Deploy to Dev
        shell: bash
        run: |
          oc login "${{ secrets.OPENSHIFT_CLUSTER }}" --token="${{ secrets.OC4_DEV_TOKEN }}"
          POSTGRES_WRITE_HOST=patroni-wps-${SUFFIX}-leader POSTGRES_READ_HOST=patroni-wps-${SUFFIX}-replica PROJ_TARGET="e1e498-dev" PROJ_TOOLS="e1e498-tools" POSTGRES_USER="wps" POSTGRES_DATABASE="wps" IMAGE_REGISTRY="image-registry.openshift-image-registry.svc:5000" PROJ_DEV="e1e498-dev" SECOND_LEVEL_DOMAIN="apps.silver.devops.gov.bc.ca" bash openshift/scripts/oc_deploy.sh ${SUFFIX} apply

      - name: Hourly actuals cronjob (Marvin)
        shell: bash
        run: |
          oc login "${{ secrets.OPENSHIFT_CLUSTER }}" --token="${{ secrets.OC4_DEV_TOKEN }}"
          POSTGRES_WRITE_HOST=patroni-wps-${SUFFIX}-leader PROJ_TARGET="e1e498-dev" PROJ_TOOLS="e1e498-tools" POSTGRES_USER="wps" POSTGRES_DATABASE="wps" IMAGE_REGISTRY="image-registry.openshift-image-registry.svc:5000" PROJ_DEV="e1e498-dev" bash openshift/scripts/oc_provision_bcfw_p1_hourly_actuals_cronjob.sh ${SUFFIX} apply

      - name: Noon forecasts cronjob (Bender)
        shell: bash
        run: |
          oc login "${{ secrets.OPENSHIFT_CLUSTER }}" --token="${{ secrets.OC4_DEV_TOKEN }}"
          POSTGRES_WRITE_HOST=patroni-wps-${SUFFIX}-leader PROJ_TARGET="e1e498-dev" PROJ_TOOLS="e1e498-tools" POSTGRES_USER="wps" POSTGRES_DATABASE="wps" IMAGE_REGISTRY="image-registry.openshift-image-registry.svc:5000" PROJ_DEV="e1e498-dev" bash openshift/scripts/oc_provision_bcfw_p1_forecasts_cronjob.sh ${SUFFIX} apply

      - name: Environment Canada GDPS cronjob (Donald)
        shell: bash
        run: |
          oc login "${{ secrets.OPENSHIFT_CLUSTER }}" --token="${{ secrets.OC4_DEV_TOKEN }}"
          POSTGRES_WRITE_HOST=patroni-wps-${SUFFIX}-leader POSTGRES_READ_HOST=patroni-wps-${SUFFIX}-replica PROJ_TARGET="e1e498-dev" PROJ_TOOLS="e1e498-tools" POSTGRES_USER="wps" POSTGRES_DATABASE="wps" IMAGE_REGISTRY="image-registry.openshift-image-registry.svc:5000" PROJ_DEV="e1e498-dev" bash openshift/scripts/oc_provision_ec_gdps_cronjob.sh ${SUFFIX} apply

      - name: Environment Canada HRDPS cronjob (Donald)
        shell: bash
        run: |
          oc login "${{ secrets.OPENSHIFT_CLUSTER }}" --token="${{ secrets.OC4_DEV_TOKEN }}"
          POSTGRES_WRITE_HOST=patroni-wps-${SUFFIX}-leader POSTGRES_READ_HOST=patroni-wps-${SUFFIX}-replica PROJ_TARGET="e1e498-dev" PROJ_TOOLS="e1e498-tools" POSTGRES_USER="wps" POSTGRES_DATABASE="wps" IMAGE_REGISTRY="image-registry.openshift-image-registry.svc:5000" PROJ_DEV="e1e498-dev" bash openshift/scripts/oc_provision_ec_hrdps_cronjob.sh ${SUFFIX} apply

      - name: Environment Canada RDPS cronjob (Donald)
        shell: bash
        run: |
          oc login "${{ secrets.OPENSHIFT_CLUSTER }}" --token="${{ secrets.OC4_DEV_TOKEN }}"
          POSTGRES_WRITE_HOST=patroni-wps-${SUFFIX}-leader POSTGRES_READ_HOST=patroni-wps-${SUFFIX}-replica PROJ_TARGET="e1e498-dev" PROJ_TOOLS="e1e498-tools" POSTGRES_USER="wps" POSTGRES_DATABASE="wps" IMAGE_REGISTRY="image-registry.openshift-image-registry.svc:5000" PROJ_DEV="e1e498-dev" bash openshift/scripts/oc_provision_ec_rdps_cronjob.sh ${SUFFIX} apply

      # f.y.i.: ZAP Scan must be able to log an issue or it will fail.
      - name: ZAP Scan
        uses: zaproxy/action-baseline@v0.4.0
        with:
          target: "https://wps-pr-${{ github.event.number }}.apps.silver.devops.gov.bc.ca"
          rules_file_name: ".zap/rules.tsv"
          # Do not return failure on warnings - TODO: this has to be resolved!
          cmd_options: "-I"

  deploy-test:
    name: Deploy to Test
    needs: prepare-test-database
    runs-on: ubuntu-latest
    steps:
      - name: Set Variables
        shell: bash
        run: |
          echo "SUFFIX=pr-${{ github.event.number }}" >> $GITHUB_ENV

      - name: Checkout
        uses: actions/checkout@v2

      - name: Build Image
        shell: bash
        run: |
          oc login "${{ secrets.OPENSHIFT_CLUSTER }}" --token="${{ secrets.OC4_TEST_TOKEN }}"
          GIT_BRANCH=${GITHUB_HEAD_REF} PROJ_TOOLS="e1e498-tools" DOCKER_IMAGE="image-registry.openshift-image-registry.svc:5000/e1e498-tools/uvicorn-gunicorn-fastapi:python3.8-latest" USE_WFWX=True bash openshift/scripts/oc_build.sh ${SUFFIX} apply

      - name: Deploy to Test
        shell: bash
        run: |
          oc login "${{ secrets.OPENSHIFT_CLUSTER }}" --token="${{ secrets.OC4_TEST_TOKEN }}"
          POSTGRES_WRITE_HOST=patroni-wps-${SUFFIX}-leader POSTGRES_READ_HOST=patroni-wps-${SUFFIX}-replica PROJ_TARGET="e1e498-test" PROJ_TOOLS="e1e498-tools" POSTGRES_USER="wps" POSTGRES_DATABASE="wps" IMAGE_REGISTRY="image-registry.openshift-image-registry.svc:5000" SECOND_LEVEL_DOMAIN="apps.silver.devops.gov.bc.ca" bash openshift/scripts/oc_deploy.sh ${SUFFIX} apply

      # Just run 1/3 EnvCan cronjobs so there's some model data in DB for comparison against P3 actuals and forecasts
      # Don't need all model data
      - name: Environment Canada RDPS cronjob (Donald)
        shell: bash
        run: |
          oc login "${{ secrets.OPENSHIFT_CLUSTER }}" --token="${{ secrets.OC4_TEST_TOKEN }}"
          POSTGRES_WRITE_HOST=patroni-wps-${SUFFIX}-leader POSTGRES_READ_HOST=patroni-wps-${SUFFIX}-replica PROJ_TARGET="e1e498-test" PROJ_TOOLS="e1e498-tools" POSTGRES_USER="wps" POSTGRES_DATABASE="wps" IMAGE_REGISTRY="image-registry.openshift-image-registry.svc:5000" bash openshift/scripts/oc_provision_ec_rdps_cronjob.sh ${SUFFIX} apply
