name: Post Merge Integration

on:
  push:
    branches:
      - main

jobs:
  lint-api:
    name: Lint (api)
    uses: ./.github/workflows/.poetry_and_r.yml
    with:
      poetry_command: poetry run ruff app/*.py app/**/*.py
      working_directory: ./api
      setup_r: false
      upload_coverage: false
  test-api:
    name: Python - Test with coverage
    uses: ./.github/workflows/.poetry_and_r.yml
    with:
      poetry_command: |
        export LD_LIBRARY_PATH=$(poetry run python -m rpy2.situation LD_LIBRARY_PATH):${LD_LIBRARY_PATH}
        export CLASSPATH=./libs/REDapp_Lib.jar:./libs/WTime.jar:./libs/hss-java.jar:$CLASSPATH
        export ORIGINS=testorigin
        export SFMS_SECRET=secret
        poetry run coverage run --source=app -m pytest app/tests -x -o log_cli=true --disable-warnings -vvv
      working_directory: ./api
      setup_r: true
      upload_coverage: true

  lint-and-test-web:
    name: Web - Lint, Test with coverage
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        node-version: [20.x]
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          # For sonar-scanner to work properly we can't use a shallow fetch.
          fetch-depth: 0
      - name: Setup kernel for react, increase watchers
        run: echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - uses: actions/cache@v4
        with:
          path: |
            **/node_modules
            ~/.cache/Cypress
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
      - name: enable corepack
        run: corepack enable
      - name: use new yarn
        run: yarn set version berry
      - name: Install node dependencies (web)
        working-directory: ./web
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn install
      - name: Lint (web)
        working-directory: ./web
        run: yarn run lint
      # "Error: ENOSPC: System limit for number of file watchers reached" can be addressed
      # with this: https://github.com/guard/listen/wiki/Increasing-the-amount-of-inotify-watchers#the-technical-details
      # It seems unnecessary at the moment because tests pass anyway
      - name: Cypress tests with coverage (web)
        working-directory: ./web
        run: yarn run cypress:ci
      - name: Unit tests (web)
        working-directory: ./web
        run: yarn run coverage:ci
      - name: Merge and finalize test coverage (web)
        working-directory: ./web
        run: yarn run finalizeCoverage

      - name: Archive coverage report (web)
        uses: actions/upload-artifact@v4
        with:
          name: web-coverage-report
          path: ./web/finalCoverage
  upload-code-coverage:
    name: Coverage with CodeCov
    runs-on: ubuntu-22.04
    needs: [lint-and-test-web, test-api]
    steps:
      # we need to checkout, so that we have codecov.yml
      - name: Checkout repo
        uses: actions/checkout@v4
      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v4
      - name: Upload test coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{secrets.CODECOV_TOKEN}}
          # we want to ensure code coverage is good, so we fail on error. (default is false)
          fail_ci_if_error: true
