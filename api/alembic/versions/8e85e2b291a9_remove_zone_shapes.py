"""remove zone shapes

Revision ID: 8e85e2b291a9
Revises: d5115b761e39
Create Date: 2023-11-03 14:10:44.782737

"""
from alembic import op
import sqlalchemy as sa
import geoalchemy2
from sqlalchemy.orm.session import Session
from sqlalchemy import select

# revision identifiers, used by Alembic.
revision = '8e85e2b291a9'
down_revision = 'd5115b761e39'
branch_labels = None
depends_on = None

shape_type_table = sa.Table('advisory_shape_types', sa.MetaData(),
                            sa.Column('id', sa.Integer),
                            sa.Column('name', sa.String))

shape_table = sa.Table('advisory_shapes', sa.MetaData(),
                       sa.Column('id', sa.Integer),
                       sa.Column('source_identifier', sa.String),
                       sa.Column('shape_type', sa.Integer),
                       sa.Column('geom', geoalchemy2.Geometry))

high_hfi_table = sa.Table('high_hfi_area', sa.MetaData(),
                       sa.Column('id', sa.Integer),
                       sa.Column('advisory_shape_id', sa.Integer),
                       sa.Column('threshold', sa.Integer),
                       sa.Column('run_parameters', sa.Integer),
                       sa.Column('area', sa.Float))


def upgrade():
    # ### commands auto generated by Alembic ###
    session = Session(bind=op.get_bind())

    statement = shape_type_table.select().where(shape_type_table.c.name == 'fire_zone')
    result = session.execute(statement).fetchone()
    fire_zone_id = result.id

    # delete dependent records from high_hfi_area table first
    zone_type_subquery = select([shape_type_table.c.id]).where(shape_type_table.c.name == 'fire_zone')
    zone_subquery = select([shape_table.c.id]).where(shape_table.c.shape_type.in_(zone_type_subquery))
    session.execute(high_hfi_table.delete().where(high_hfi_table.c.advisory_shape_id.in_(zone_subquery)))

    session.execute(shape_table.delete().where(shape_table.c.shape_type == fire_zone_id))
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic ###
    pass # reimport fire zones in seperate migration if needed
    # ### end Alembic commands ###
