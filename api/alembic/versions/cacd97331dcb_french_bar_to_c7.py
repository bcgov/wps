"""french bar to c7

Revision ID: cacd97331dcb
Revises: ecdace5bfc4f
Create Date: 2025-04-07 10:46:35.571916

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.orm.session import Session

# revision identifiers, used by Alembic.
revision = 'cacd97331dcb'
down_revision = 'ecdace5bfc4f'
branch_labels = None
depends_on = None

planning_weather_stations_table = sa.Table('planning_weather_stations', sa.MetaData(),
                                           sa.Column('id', sa.Integer),
                                           sa.Column('fuel_type_id', sa.Integer),
                                           sa.Column('planning_area_id', sa.Integer),
                                           sa.Column('station_code', sa.Integer),
                                           sa.Column('order_of_appearance_in_planning_area_list', sa.Integer),
                                           sa.Column('create_user', sa.String),
                                           sa.Column('create_timestamp', sa.TIMESTAMP),
                                           sa.Column('update_user', sa.String),
                                           sa.Column('update_timestamp', sa.TIMESTAMP),
                                           sa.Column('is_deleted', sa.Boolean))

fuel_types_table = sa.Table('fuel_types', sa.MetaData(),
                            sa.Column('id', sa.Integer),
                            sa.Column('abbrev', sa.String),
                            sa.Column('fuel_type_code', sa.String),
                            sa.Column('description', sa.String),
                            sa.Column('percentage_conifer', sa.Integer),
                            sa.Column('percentage_dead_fir', sa.Integer))

def get_planning_station_id(session: Session, station_code: int):
    res = session.query(planning_weather_stations_table) \
        .filter(planning_weather_stations_table.c.station_code == station_code)
    return int(res.first().id)

def get_fuel_type_id(session: Session, fuel_type_abbrev: str):
    res = session.query(fuel_types_table) \
        .filter(fuel_types_table.c.abbrev.ilike(f"{fuel_type_abbrev}%"))
    return int(res.first().id)

def upgrade():
    # ### commands auto generated by Alembic ###
    session = Session(bind=op.get_bind())
    
    french_bar_id = get_planning_station_id(session, 306)
    c7_id = get_fuel_type_id(session, "C7")

    wet_belt_update_order_stmt = planning_weather_stations_table.update().\
        where(planning_weather_stations_table.c.id == french_bar_id).\
        values({
            'fuel_type_id': c7_id,
        })
    
    session.execute(wet_belt_update_order_stmt)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic ###
    session = Session(bind=op.get_bind())
    
    french_bar_id = get_planning_station_id(session, 306)
    c7b_id = get_fuel_type_id(session, "C7B")

    wet_belt_update_order_stmt = planning_weather_stations_table.update().\
        where(planning_weather_stations_table.c.id == french_bar_id).\
        values({
            'fuel_type_id': c7b_id,
        })
    
    session.execute(wet_belt_update_order_stmt)
    # ### end Alembic commands ###
