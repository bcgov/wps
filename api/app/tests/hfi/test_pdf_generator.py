import json
import os
from datetime import date, datetime
import hashlib
from jinja2 import Environment, FunctionLoader
from app.db.models.hfi_calc import FuelType
from app.hfi.pdf_generator import generate_pdf, get_pdf_filename, generate_html
from app.hfi.pdf_template import get_template
from app.schemas.hfi_calc import (FireCentre,
                                  HFIResultResponse)
from app.schemas.hfi_calc import HFIResultResponse

test_hfi_result = os.path.join(os.path.dirname(__file__), 'test_hfi_result.json')
test_fcs = os.path.join(os.path.dirname(__file__), 'test_fire_centres.json')


def generate_test_input():
    with open(test_hfi_result, 'r') as hfi_result, open(test_fcs, 'r') as fcs:
        result = json.load(hfi_result)
        fc_dict = json.load(fcs)
    fire_centres = []
    for fc_json in fc_dict['fire_centres']:
        fc = FireCentre(**fc_json)
        fire_centres.append(fc)
    fuel_types = {id: FuelType(
        id=id,
        abbrev=f'{id}',
        fuel_type_code=f'{id}',
        description=f'{id}',
        percentage_conifer=0,
        percentage_dead_fir=0
    ) for id in range(50)}
    return result, fire_centres, fuel_types


def test_generate_html():
    """ Test the HTML generation - checking that the hash of the html doesn't change """
    jinja_env = Environment(loader=FunctionLoader(get_template), autoescape=True)

    (result, fire_centres, fuel_types) = generate_test_input()
    html_string, _ = generate_html(HFIResultResponse(**result), fire_centres, 'wps',
                                   datetime.fromisocalendar(2022, 2, 2), jinja_env,
                                   fuel_types)
    # The hash should only change if an intentinonal change has been made to the pdf,
    # in which case the hash value we're checking here may be updated by the developer.
    assert hashlib.sha256(html_string.encode()).hexdigest(
    ) == '3ae6afe40e9b477a158816f9e055d66691c2a51c5bc86acf228fd3c1e669b47f'


def test_generate_pdf():
    jinja_env = Environment(loader=FunctionLoader(get_template), autoescape=True)

    (result, fire_centres, fuel_types) = generate_test_input()
    pdf_bytes, pdf_filename = generate_pdf(HFIResultResponse(**result), fire_centres, 'wps',
                                           datetime.fromisocalendar(2022, 2, 2), jinja_env, fuel_types=fuel_types)
    assert len(pdf_bytes) > 0
    assert pdf_filename is not None
    # Would be nice to check if the pdf hash has changed, but the pdf generated by pdfkit is non
    # deterministic.


def test_pdf_filename():
    res = get_pdf_filename('Kamloops', date.fromisocalendar(2022, 2, 2), 'wps')
    assert res == 'Kamloops_HFICalculator_2022-01-11_WPS.pdf'
