# PHASE 1 - build frontend.
FROM node:20-alpine AS static
# Switch to root user for package installs
USER 0
WORKDIR /app

COPY web/package.json .
COPY web/yarn.lock . 
COPY web/.yarnrc.yml .
RUN corepack enable
RUN yarn set version berry
RUN yarn config set npmScopes.psu.npmRegistryServer https://artifacts.developer.gov.bc.ca/artifactory/api/npm/pe1e-psu-npm-local/
RUN yarn config set npmScopes.psu.npmAlwaysAuth true 
RUN --mount=type=secret,id=ARTIFACTORY_SVCACCT_TOKEN yarn config set npmScopes.psu.npmAuthToken $(cat /run/secrets/ARTIFACTORY_SVCACCT_TOKEN)
# do yarn install first so it will be cached
RUN CYPRESS_INSTALL_BINARY=0 yarn install --immutable
COPY web .
RUN --mount=type=secret,id=SENTRY_AUTH_TOKEN SENTRY_AUTH_TOKEN=$(cat /run/secrets/SENTRY_AUTH_TOKEN) yarn run build:prod 


# Remove sourcemaps after they've been uploaded to sentry
RUN rm build/static/js/**.map

# Switch back to default user
USER 1001

# PHASE 2 - prepare hosting.
# https://catalog.redhat.com/software/containers/ubi8/nginx-120/6156abfac739c0a4123a86fd
FROM registry.access.redhat.com/ubi8/nginx-120

# Add application sources
ADD ./openshift/nginx.conf "${NGINX_CONF_PATH}"

# Copy the static content:
COPY --from=static /app/build .

EXPOSE 3000
CMD nginx -g "daemon off;"