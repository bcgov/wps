kind: Template
apiVersion: v1
metadata:
  name: wps-global
parameters:
  - name: WFWX_AUTH_URL
    description: Wildfire One API authentication URL
    required: true
  - name: WFWX_BASE_URL
    description: Wildfire One API URL
    required: true
  - name: WFWX_USER
    description: The username to be used for authentication to the Wildfire One API
    required: true
  - name: USE_WFWX
    description: Boolean value indicating whether Wildfire One API should be used for data retrieval
    required: true
  - name: WFWX_SECRET
    description: Password for authentication to access Wildfire One API
    required: true
  - name: KEYCLOAK_PUBLIC_KEY
    description: Keycloak public key for validating the access token
    required: true
  - name: APP_DB_PASSWORD
    description: Password for the application database
    required: true
  - description: Password of the superuser account for initialization.
    displayName: Superuser Passsword
    name: PATRONI_SUPERUSER_PASSWORD
    required: true
  - description: Password of the replication account for initialization.
    displayName: Repication Passsword
    name: PATRONI_REPLICATION_PASSWORD
    required: true
  - name: STATUS_CHECKER_SECRET
    description: Token for status-checker Openshift service account. Used for /health check
  - name: OPENSHIFT_BASE_URI
    description: Base URI for connecting to console in Openshift. Used for /health check
  - name: OPENSHIFT_NAMESPACE_API
    description: Openshift namespace api
    value: "apis/apps/v1/namespaces/"
  - name: ROCKET_AUTH_TOKEN
    description: Authentication token for rocket.chat notifications
    required: true
  - name: ROCKET_USER_ID
    description: User id for rocket.chat notifications
    required: true
  - name: ROCKET_URL_POST_MESSAGE
    description: Url to Rocketchat API for posting a message
    required: true
  - name: ROCKET_CHANNEL
    description: The name of the Rocketchat channel to post automated notifications to
    required: true
  - name: CERTBOT_SERVER
    description: Certbot server url
  - name: OBJECT_STORE_SERVER
    description: s3 compatible object store server
  - name: OBJECT_STORE_USER_ID
    description: User ID for s3 compatible object store
  - name: OBJECT_STORE_SECRET
    description: Secret for s3 compatible object store
  - name: OBJECT_STORE_BUCKET
    description: Bucket for s3 compatible object store
  - name: REDIS_HOST
    description: Host of redis server.
    required: True
  - name: REDIS_PORT
    description: Port redis server is running on.
    required: True
    value: "6379"
  - name: REDIS_USE
    description: Indicate if redis should be used.
    required: True
    value: "True"
  - name: REDIS_STATION_CACHE_EXPIRY
    description: How long to cache station lists for.
    required: True
    value: "86400"
  - name: REDIS_AUTH_CACHE_EXPIRY
    description: How long to cache auth response for.
    required: True
    value: "600"
  - name: REDIS_STATION_CACHE_EXPIRY
    description: How long to cache station list response for.
    required: True
    value: "86400"
  - name: REDIS_AUTH_CACHE_EXPIRY
    description: How long to cache wf1 auth token for.
    required: True
    value: "600"
  - name: REDIS_DAILIES_BY_STATION_CODE_EXPIRY
    description: How long to cache dailies by station code for.
    required: True
    value: "300"
  - name: REDIS_HOURLIES_BY_STATION_CODE_CACHE_EXPIRY
    description: How long to cache hourlies by station code for.
    required: True
    value: "300"
  - name: REDIS_CACHE_ENV_CANADA
    description: If True then cache env canada downloads
    required: True
    value: "False"
  - name: REDIS_ENV_CANADA_CACHE_EXPIRY
    description: How long to cache env canada downloads for.
    required: True
    value: "21600"
  - name: GUNICORN_TIMEOUT
    description: Workers silent for more than this many seconds are killed and restarted. (https://github.com/tiangolo/uvicorn-gunicorn-fastapi-docker#timeout)
    required: True
    value: "180"
  - name: SFMS_SECRET
    description: Secret for SFMS process triger
    required: True
  - name: NATS_SERVER
    description: NATS server url
    required: True
objects:
  - kind: ConfigMap
    apiVersion: v1
    metadata:
      name: wps-global
      labels:
        app.kubernetes.io/part-of: wps
    data:
      env.origins: wps-*.apps.silver.devops.gov.bc.ca
      env.wfwx-auth-url: ${WFWX_AUTH_URL}
      env.wfwx-base-url: ${WFWX_BASE_URL}
      env.wfwx-user: ${WFWX_USER}
      env.use-wfwx: ${USE_WFWX}
      env.keycloak-public-key: ${KEYCLOAK_PUBLIC_KEY}
      bc-fire-weather-user: ${BC_FIRE_WEATHER_USER}
      bc-fire-weather-filter-id: ${BC_FIRE_WEATHER_FILTER_ID}
      env.openshift-base-uri: ${OPENSHIFT_BASE_URI}
      rocket.chat-channel: ${ROCKET_CHANNEL}
      rocket.chat-url-post-message: ${ROCKET_URL_POST_MESSAGE}
      env.redis-host: ${REDIS_HOST}
      env.redis-port: ${REDIS_PORT}
      env.redis-use: ${REDIS_USE}
      env.redis-station-cache-expiry: ${REDIS_STATION_CACHE_EXPIRY}
      env.redis-auth-cache-expiry: ${REDIS_AUTH_CACHE_EXPIRY}
      env.redis-dailies-by-station-code-expiry: ${REDIS_DAILIES_BY_STATION_CODE_EXPIRY}
      env.redis-hourlies-by-station-code-cache-expiry: ${REDIS_HOURLIES_BY_STATION_CODE_CACHE_EXPIRY}
      env.redis-cache-env-canada: ${REDIS_CACHE_ENV_CANADA}
      env.redis-cache-noaa: ${REDIS_CACHE_NOAA}
      env.redis-env-canada-cache-expiry: ${REDIS_ENV_CANADA_CACHE_EXPIRY}
      env.redis-noaa-cache-expiry: ${REDIS_NOAA_CACHE_EXPIRY}
      env.gunicorn.timeout: ${GUNICORN_TIMEOUT}
      env.nats-server: ${NATS_SERVER}

  - kind: Secret
    apiVersion: v1
    metadata:
      name: wps-global
    type: Opaque
    stringData:
      object-store-server: ${OBJECT_STORE_SERVER}
      object-store-user-id: ${OBJECT_STORE_USER_ID}
      object-store-bucket: ${OBJECT_STORE_SECRET}
      object-store-secret: ${OBJECT_STORE_BUCKET}
      wfwx-secret: ${WFWX_SECRET}
      app-db-password: ${APP_DB_PASSWORD}
      patroni-replication-password: ${PATRONI_REPLICATION_PASSWORD}
      patroni-superuser-password: ${PATRONI_SUPERUSER_PASSWORD}
      bc-fire-weather-secret: ${BC_FIRE_WEATHER_SECRET}
      status-checker-sa-secret: ${STATUS_CHECKER_SECRET}
      rocket.chat-auth-token-secret: ${ROCKET_AUTH_TOKEN}
      rocket.chat-user-id-secret: ${ROCKET_USER_ID}
      env.openshift-namespace-api: ${OPENSHIFT_NAMESPACE_API}
      certbot-server: ${CERTBOT_SERVER}
      sfms-secret: ${SFMS_SECRET}
