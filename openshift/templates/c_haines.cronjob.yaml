kind: Template
apiVersion: v1
metadata:
  name: ${JOB_NAME}-cronjob-template
  annotations:
    description: "Scheduled task to run c-haines."
    tags: "cronjob,c-haines"
labels:
  app.kubernetes.io/part-of: "${NAME}"
  app: ${NAME}
parameters:
  - name: NAME
    description: Module name
    value: wps-c-haines
  - name: SUFFIX
    description: Deployment suffix, e.g. pr-###
    required: true
  - name: PROJECT_TOOLS
    value: auzhsi-tools
  - name: JOB_NAME
    value: c-haines
  - name: SCHEDULE
    value: "27 * * * *"
    required: true
objects:
  - kind: CronJob
    apiVersion: batch/v1beta1
    metadata:
      name: ${JOB_NAME}
      labels:
        cronjob: ${JOB_NAME}
    spec:
      schedule: ${SCHEDULE}
      concurrencyPolicy: "Replace"
      jobTemplate:
        metadata:
          labels:
            cronjob: ${JOB_NAME}
        spec:
          template:
            spec:
              containers:
                - name: ${JOB_NAME}
                  image: docker-registry.default.svc:5000/${PROJECT_TOOLS}/${NAME}-${SUFFIX}:${SUFFIX}
                  imagePullPolicy: "Always"
                  command: ["python3", "-m", "app.weather_models.c_haines"]
                  env:
                    - name: POSTGRES_READ_USER
                      value: ${NAME}-${SUFFIX}
                    - name: POSTGRES_WRITE_USER
                      value: ${NAME}-${SUFFIX}
                    - name: POSTGRES_PASSWORD
                      valueFrom:
                        secretKeyRef:
                          name: ${NAME}-global
                          key: app-db-password
                    - name: POSTGRES_WRITE_HOST
                      value: patroni-leader-${NAME}-${SUFFIX}
                    - name: POSTGRES_READ_HOST
                      value: patroni-replica-${NAME}-${SUFFIX}
                    - name: POSTGRES_PORT
                      value: "5432"
                    - name: POSTGRES_DATABASE
                      value: ${NAME}-${SUFFIX}
                    - name: ROCKET_URL_POST_MESSAGE
                      valueFrom:
                        configMapKeyRef:
                          name: ${NAME}-global
                          key: rocket.chat-url-post-message
                    - name: ROCKET_CHANNEL
                      valueFrom:
                        configMapKeyRef:
                          name: ${NAME}-global
                          key: rocket.chat-channel
                    - name: ROCKET_USER_ID
                      valueFrom:
                        secretKeyRef:
                          name: ${NAME}-global
                          key: rocket.chat-user-id-secret
                    - name: ROCKET_AUTH_TOKEN
                      valueFrom:
                        secretKeyRef:
                          name: ${NAME}-global
                          key: rocket.chat-auth-token-secret
              restartPolicy: OnFailure
