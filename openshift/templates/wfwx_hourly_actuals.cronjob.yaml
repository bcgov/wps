kind: Template
apiVersion: template.openshift.io/v1
metadata:
  name: ${JOB_NAME}-cronjob-template
  annotations:
    description: "Scheduled task to download noon-time weather forecasts for all weather stations from the WFWX API."
    tags: "cronjob,wfwx-hourly-actuals"
labels:
  app.kubernetes.io/part-of: "${NAME}"
  app: ${NAME}-${SUFFIX}
parameters:
  - name: NAME
    description: Module name
    value: wps
  - name: SUFFIX
    description: Deployment suffix, e.g. pr-###
    required: true
  - name: PROJ_TOOLS
    value: e1e498-tools
  - name: IMAGE_REGISTRY
    value: image-registry.openshift-image-registry.svc:5000
  - name: JOB_NAME
    value: wfwx-hourly-actuals
  - name: SCHEDULE
    required: true
  - name: POSTGRES_WRITE_HOST
    required: true
    value: patroni-${NAME}-${SUFFIX}-leader
  - name: POSTGRES_READ_HOST
    value: patroni-${NAME}-${SUFFIX}-replica
  - name: POSTGRES_USER
    required: true
    value: ${NAME}-${SUFFIX}
  - name: POSTGRES_DATABASE
    required: true
    value: ${NAME}-${SUFFIX}
objects:
  - kind: CronJob
    apiVersion: batch/v1
    metadata:
      name: ${JOB_NAME}
    spec:
      schedule: ${SCHEDULE}
      concurrencyPolicy: "Replace"
      jobTemplate:
        metadata:
          labels:
            cronjob: ${JOB_NAME}
            app: ${APP_LABEL}
        spec:
          template:
            spec:
              containers:
                - name: ${JOB_NAME}
                  image: ${IMAGE_REGISTRY}/${PROJ_TOOLS}/${NAME}-${SUFFIX}:${SUFFIX}
                  imagePullPolicy: "Always"
                  command: ["python", "-m", "app.jobs.hourly_actuals"]
                  env:
                    - name: WFWX_MAX_PAGE_SIZE
                      value: ${WFWX_MAX_PAGE_SIZE}
                    - name: WFWX_BASE_URL
                      valueFrom:
                        configMapKeyRef:
                          name: ${NAME}-global
                          key: env.wfwx-base-url
                    - name: WFWX_AUTH_URL
                      valueFrom:
                        configMapKeyRef:
                          name: ${NAME}-global
                          key: env.wfwx-auth-url
                    - name: WFWX_USER
                      valueFrom:
                        configMapKeyRef:
                          name: ${NAME}-global
                          key: env.wfwx-user
                    - name: WFWX_SECRET
                      valueFrom:
                        secretKeyRef:
                          name: ${NAME}-global
                          key: wfwx-secret
                    - name: POSTGRES_PASSWORD
                      valueFrom:
                        secretKeyRef:
                          name: ${NAME}-global
                          key: app-db-password
                    - name: POSTGRES_WRITE_HOST
                      value: ${POSTGRES_WRITE_HOST}
                    - name: POSTGRES_PORT
                      value: "5432"
                    - name: POSTGRES_DATABASE
                      value: ${POSTGRES_DATABASE}
                    - name: POSTGRES_WRITE_USER
                      value: ${POSTGRES_USER}
                    - name: POSTGRES_READ_USER
                      value: ${POSTGRES_USER}
                    - name: ROCKET_URL_POST_MESSAGE
                      valueFrom:
                        configMapKeyRef:
                          name: ${NAME}-global
                          key: rocket.chat-url-post-message
                    - name: ROCKET_CHANNEL
                      valueFrom:
                        configMapKeyRef:
                          name: ${NAME}-global
                          key: rocket.chat-channel
                    - name: ROCKET_USER_ID
                      valueFrom:
                        secretKeyRef:
                          name: ${NAME}-global
                          key: rocket.chat-user-id-secret
                    - name: ROCKET_AUTH_TOKEN
                      valueFrom:
                        secretKeyRef:
                          name: ${NAME}-global
                          key: rocket.chat-auth-token-secret
                    - name: REDIS_HOST
                      valueFrom:
                        configMapKeyRef:
                          name: ${NAME}-global
                          key: env.redis-host
                    - name: REDIS_PORT
                      valueFrom:
                        configMapKeyRef:
                          name: ${NAME}-global
                          key: env.redis-port
                    - name: REDIS_USE
                      valueFrom:
                        configMapKeyRef:
                          name: ${NAME}-global
                          key: env.redis-use
                    - name: REDIS_PASSWORD
                      valueFrom:
                        secretKeyRef:
                          name: ${NAME}-redis
                          key: database-password
                    - name: REDIS_STATION_CACHE_EXPIRY
                      valueFrom:
                        configMapKeyRef:
                          name: ${NAME}-global
                          key: env.redis-station-cache-expiry
                    - name: REDIS_AUTH_CACHE_EXPIRY
                      valueFrom:
                        configMapKeyRef:
                          name: ${NAME}-global
                          key: env.redis-auth-cache-expiry
                    - name: REDIS_DAILIES_BY_STATION_CODE_CACHE_EXPIRY
                      valueFrom:
                        configMapKeyRef:
                          name: ${NAME}-global
                          key: env.redis-dailies-by-station-code-expiry
              restartPolicy: OnFailure
