kind: Template
apiVersion: v1
metadata:
  name: ${JOB_NAME}-cronjob-template
  annotations:
    description: "Scheduled task to download noon-time weather forecasts for all weather stations from the BC Fire Weather Phase 1 API."
    tags: "cronjob,bcfw-p1"
labels:
  app.kubernetes.io/part-of: "${NAME}"
  app: ${NAME}
parameters:
  - name: NAME
    description: Module name
    value: wps-api
  - name: SUFFIX
    description: Deployment suffix, e.g. pr-###
    required: true
  - name: PROJECT_TOOLS
    value: auzhsi-tools
  - name: JOB_NAME
    value: bcfw-p1-hourly-actuals
objects:
  - kind: CronJob
    apiVersion: batch/v1beta1
    metadata:
      name: ${JOB_NAME}
      labels:
        cronjob: ${JOB_NAME}
    spec:
      schedule: "15 * * * *"
      concurrencyPolicy: "Replace"
      jobTemplate:
        metadata:
          labels:
            cronjob: ${JOB_NAME}
        spec:
          template:
            spec:
              containers:
                - name: ${JOB_NAME}
                  image: docker-registry.default.svc:5000/${PROJECT_TOOLS}/${NAME}-${SUFFIX}:${SUFFIX}
                  imagePullPolicy: "Always"
                  command:
                    ["python", "-m", "app.fireweather_bot.hourly_actuals"]
                  env:
                    - name: BC_FIRE_WEATHER_SECRET
                      valueFrom:
                        secretKeyRef:
                          name: ${NAME}-global
                          key: bc-fire-weather-secret
                    - name: BC_FIRE_WEATHER_USER
                      valueFrom:
                        configMapKeyRef:
                          name: ${NAME}-global
                          key: bc-fire-weather-user
                    - name: BC_FIRE_WEATHER_FILTER_ID
                      valueFrom:
                        configMapKeyRef:
                          name: ${NAME}-global
                          key: bc-fire-weather-filter-id
                    - name: POSTGRES_READ_USER
                      value: ${NAME}-${SUFFIX}
                    - name: POSTGRES_WRITE_USER
                      value: ${NAME}-${SUFFIX}
                    - name: POSTGRES_PASSWORD
                      valueFrom:
                        secretKeyRef:
                          name: ${NAME}-global
                          key: app-db-password
                    - name: POSTGRES_WRITE_HOST
                      value: patroni-leader-${NAME}-${SUFFIX}
                    - name: POSTGRES_READ_HOST
                      value: patroni-replica-${NAME}-${SUFFIX}
                    - name: POSTGRES_PORT
                      value: "5432"
                    - name: POSTGRES_DATABASE
                      value: ${NAME}-${SUFFIX}
                    - name: ROCKET_URL_POST_MESSAGE
                      valueFrom:
                        configMapKeyRef:
                          name: ${NAME}-global
                          key: rocket.chat-url-post-message
                    - name: ROCKET_CHANNEL
                      valueFrom:
                        configMapKeyRef:
                          name: ${NAME}-global
                          key: rocket.chat-channel
                    - name: ROCKET_USER_ID
                      valueFrom:
                        secretKeyRef:
                          name: ${NAME}-global
                          key: rocket.chat-user-id-secret
                    - name: ROCKET_AUTH_TOKEN
                      valueFrom:
                        secretKeyRef:
                          name: ${NAME}-global
                          key: rocket.chat-auth-token-secret
              restartPolicy: OnFailure
