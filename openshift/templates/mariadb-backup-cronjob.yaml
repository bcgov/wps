---
kind: "Template"
apiVersion: "v1"
metadata:
  name: "{$JOB_NAME}-cronjob-template"
  annotations:
    description: "Scheduled Task to perform a Database Backup"
    tags: "cronjob,backup"
parameters:
  - name: "JOB_NAME"
    displayName: "Job Name"
    description: "Name of the Scheduled Job to Create."
    required: true
  - name: "JOB_PERSISTENT_STORAGE_NAME"
    displayName: "Backup Persistent Storage Name"
    description: "Pre-Created PVC to use for backup target"
    required: true
  - name: "SCHEDULE"
    displayName: "Cron Schedule"
    description: "Cron Schedule to Execute the Job (using local cluster system TZ)"
    # Targeting 2:00 AM Daily
    value: "0 2 * * *"
    required: true
  - name: "SOURCE_IMAGE_NAME"
    displayName: "Source Image Name"
    description: "The name of the image to use for this resource."
    required: true
    value: "backup-mariadb"
  - name: "IMAGE_NAMESPACE"
    displayName: "Image Namespace"
    description: "The namespace of the OpenShift project containing the imagestream for the application."
    required: true
    value: "e1e498-tools"
  - name: "TAG_NAME"
    displayName: "Environment TAG name"
    description: "The TAG name for this environment, e.g., dev, test, prod"
    required: true
    value: "prod"
  - name: "DATABASE_SERVICE_NAME"
    displayName: "Database Service Name"
    description: "The name of the database service."
    required: true
    value: matomo-db
  - name: "DATABASE_DEFAULT_PORT"
    displayName: "Database Service Port"
    description: "The configured port for the database service"
    required: false
  - name: "DATABASE_NAME"
    displayName: "Database Name"
    description: "The name of the database."
    required: false
  - name: "DATABASE_DEPLOYMENT_NAME"
    displayName: "Database Deployment Name"
    description: "The name associated to the database deployment resources.  In particular, this is used to wire up the credentials associated to the database."
    required: true
    value: "matomo-db"
  - name: DATABASE_USER_KEY_NAME
    displayName: Database User Key Name
    description:
      The database user key name stored in database deployment resources specified
      by DATABASE_DEPLOYMENT_NAME.
    required: true
    value: database-user
  - name: DATABASE_PASSWORD_KEY_NAME
    displayName: Database Password Key Name
    description:
      The database password key name stored in database deployment resources
      specified by DATABASE_DEPLOYMENT_NAME.
    required: true
    value: database-password
  - name: "BACKUP_STRATEGY"
    displayName: "Backup Strategy"
    description: "The strategy to use for backups; for example daily, or rolling."
    required: true
    value: "rolling"
  - name: "BACKUP_DIR"
    displayName: "The root backup directory"
    description: "The name of the root backup directory"
    required: true
    value: "/backups/"
  - name: "JOB_SERVICE_ACCOUNT"
    displayName: "Service Account Name"
    description: "Name of the Service Account To Exeucte the Job As."
    value: "default"
    required: true
  - name: "SUCCESS_JOBS_HISTORY_LIMIT"
    displayName: "Successful Job History Limit"
    description: "The number of successful jobs that will be retained"
    value: "5"
    required: true
  - name: "FAILED_JOBS_HISTORY_LIMIT"
    displayName: "Failed Job History Limit"
    description: "The number of failed jobs that will be retained"
    value: "2"
    required: true
  - name: "JOB_BACKOFF_LIMIT"
    displayName: "Job Backoff Limit"
    description: "The number of attempts to try for a successful job outcome"
    value: "0"
    required: false
  - name: "CONFIG_MAP_NAME"
    displayName: "Config Map Name"
    description: "The name of the configuration map."
    required: true
  - name: "CONFIG_VOLUME_NAME"
    displayName: "Name of the config volume"
    description: "The name assigned to the configuration volument"
    required: true
  - name: "CONFIG_MOUNT_PATH"
    displayName: "Config Mount Path"
    description: "The path to use to mount the config file."
    required: true
    value: "/"
  - name: "CONFIG_FILE_NAME"
    displayName: "Config File Name"
    description: "The name of the configuration file."
    required: true
    value: "backup.conf"
objects:
  - kind: "CronJob"
    apiVersion: "batch/v1beta1"
    metadata:
      name: "${JOB_NAME}"
      labels:
        template: "${JOB_NAME}-cronjob"
        cronjob: "${JOB_NAME}"
    spec:
      schedule: "${SCHEDULE}"
      concurrencyPolicy: "Forbid"
      successfulJobsHistoryLimit: "${{SUCCESS_JOBS_HISTORY_LIMIT}}"
      failedJobsHistoryLimit: "${{FAILED_JOBS_HISTORY_LIMIT}}"
      jobTemplate:
        metadata:
          labels:
            template: "${JOB_NAME}-job"
            cronjob: "${JOB_NAME}"
        spec:
          backoffLimit: ${{JOB_BACKOFF_LIMIT}}
          template:
            spec:
              containers:
                - name: "${JOB_NAME}-cronjob"
                  image: "docker-registry.default.svc:5000/${IMAGE_NAMESPACE}/${SOURCE_IMAGE_NAME}:${TAG_NAME}"
                  # image: backup
                  command:
                    - "/bin/bash"
                    - "-c"
                    - "/backup.sh -1"
                  volumeMounts:
                    - mountPath: "${BACKUP_DIR}"
                      name: "backup"
                    - name: ${CONFIG_VOLUME_NAME}
                      mountPath: "${CONFIG_MOUNT_PATH}${CONFIG_FILE_NAME}"
                      subPath: "${CONFIG_FILE_NAME}"
                  env:
                    - name: BACKUP_DIR
                      value: "${BACKUP_DIR}"
                    - name: BACKUP_STRATEGY
                      valueFrom:
                        configMapKeyRef:
                          name: "${JOB_NAME}-config"
                          key: BACKUP_STRATEGY
                    - name: NUM_BACKUPS
                      valueFrom:
                        configMapKeyRef:
                          name: "${JOB_NAME}-config"
                          key: RETENTION.NUM_BACKUPS
                          optional: true
                    - name: DAILY_BACKUPS
                      valueFrom:
                        configMapKeyRef:
                          name: "${JOB_NAME}-config"
                          key: RETENTION.DAILY_BACKUPS
                          optional: true
                    - name: WEEKLY_BACKUPS
                      valueFrom:
                        configMapKeyRef:
                          name: "${JOB_NAME}-config"
                          key: RETENTION.WEEKLY_BACKUPS
                          optional: true
                    - name: MONTHLY_BACKUPS
                      valueFrom:
                        configMapKeyRef:
                          name: "${JOB_NAME}-config"
                          key: RETENTION.MONTHLY_BACKUPS
                          optional: true
                    - name: DATABASE_SERVICE_NAME
                      valueFrom:
                        configMapKeyRef:
                          name: "${JOB_NAME}-config"
                          key: DATABASE_SERVICE_NAME
                    - name: DEFAULT_PORT
                      valueFrom:
                        configMapKeyRef:
                          name: "${JOB_NAME}-config"
                          key: DEFAULT_PORT
                          optional: true
                    - name: DATABASE_USER
                      valueFrom:
                        secretKeyRef:
                          name: "${DATABASE_DEPLOYMENT_NAME}"
                          key: "${DATABASE_USER_KEY_NAME}"
                    - name: DATABASE_PASSWORD
                      valueFrom:
                        secretKeyRef:
                          name: "${DATABASE_DEPLOYMENT_NAME}"
                          key: "${DATABASE_PASSWORD_KEY_NAME}"
              volumes:
                - name: backup
                  persistentVolumeClaim:
                    claimName: "${JOB_PERSISTENT_STORAGE_NAME}"
                - name: "${CONFIG_VOLUME_NAME}"
                  configMap:
                    name: "${CONFIG_MAP_NAME}"
                    items:
                      - key: backup.conf
                        path: backup.conf
              restartPolicy: "Never"
              terminationGracePeriodSeconds: 30
              activeDeadlineSeconds: 1600
              dnsPolicy: "ClusterFirst"
              serviceAccountName: "${JOB_SERVICE_ACCOUNT}"
              serviceAccount: "${JOB_SERVICE_ACCOUNT}"
