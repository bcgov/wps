apiVersion: v1
kind: Template
metadata:
  name: ${NAME}
  annotations:
    openshift.io/display-name: 'wps-web'
    description: 'Wildfire Predictive Services - Web Client'
    openshift.io/long-description: 'Wildfire Predictive Services - Web Client'
    tags: 'wps,wps-web'
    iconClass: icon-js
    openshift.io/provider-display-name: 'Government of British Columbia'
    openshift.io/documentation-url: 'https://github.com/bcgov/wps-web'
    openshift.io/support-url: 'https://github.com/bcgov/wps-web'
labels:
  app.kubernetes.io/part-of: '${NAME}'
parameters:
  - name: NAME
    description: Module name
    value: wps-web
  - name: SUFFIX
    description: Deployment suffix, e.g. pr-###
    required: true
  - name: DOCKER_REGISTRY
    value: docker-registry.default.svc:5000
  - name: PROJECT_TOOLS
    value: auzhsi-tools
  - name: CPU_REQUEST
    description: Requested CPU
    value: 500m
  - name: CPU_LIMIT
    description: CPU upper limit
    value: 500m
  - name: MEMORY_REQUEST
    description: Requested memory
    value: 1Gi
  - name: MEMORY_LIMIT
    description: Memory upper limit
    value: 1Gi
  - name: REPLICAS
    description: Number of replicas (pods)
    value: '2'
  - name: WPS_WEB_GLOBAL_CONFIG
    value: wps-web-global
  - name: WPS_API_BASE_URL
    value: https://wps-api-prod.pathfinder.gov.bc.ca
objects:
  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      labels:
        app: ${NAME}-${SUFFIX}
      name: ${NAME}-${SUFFIX}
    spec:
      replicas: ${{REPLICAS}}
      selector:
        name: ${NAME}-${SUFFIX}
      strategy:
        type: Rolling
      triggers: []
      template:
        metadata:
          labels:
            name: ${NAME}-${SUFFIX}
        spec:
          automountServiceAccountToken: false
          containers:
            - image: ${DOCKER_REGISTRY}/${PROJECT_TOOLS}/${NAME}-${SUFFIX}:${SUFFIX}
              imagePullPolicy: Always
              name: ${NAME}
              env:
                - name: REACT_APP_API_BASE_URL
                  value: ${WPS_API_BASE_URL}
                - name: REACT_APP_FIDER_LINK
                  valueFrom:
                    configMapKeyRef:
                      name: ${WPS_WEB_GLOBAL_CONFIG}
                      key: env.fider-url
                - name: REACT_APP_KEYCLOAK_AUTH_URL
                  valueFrom:
                    configMapKeyRef:
                      name: ${WPS_WEB_GLOBAL_CONFIG}
                      key: env.keycloak-auth-url
                - name: REACT_APP_KEYCLOAK_REALM
                  valueFrom:
                    configMapKeyRef:
                      name: ${WPS_WEB_GLOBAL_CONFIG}
                      key: env.keycloak-realm
                - name: REACT_APP_KEYCLOAK_CLIENT
                  valueFrom:
                    configMapKeyRef:
                      name: ${WPS_WEB_GLOBAL_CONFIG}
                      key: env.keycloak-client
              ports:
                - containerPort: 3000
                  protocol: TCP
              resources:
                limits:
                  cpu: ${CPU_LIMIT}
                  memory: ${MEMORY_LIMIT}
                requests:
                  cpu: ${CPU_REQUEST}
                  memory: ${MEMORY_REQUEST}
              readinessProbe:
                httpGet:
                  path: '/'
                  port: 3000
                  scheme: HTTP
                initialDelaySeconds: 30
                timeoutSeconds: 1
              livenessProbe:
                successThreshold: 1
                failureThreshold: 3
                httpGet:
                  path: '/'
                  port: 3000
                  scheme: HTTP
                initialDelaySeconds: 30
                periodSeconds: 360
                timeoutSeconds: 1

  - apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: ${NAME}-${SUFFIX}
      name: ${NAME}-${SUFFIX}
    spec:
      ports:
        - name: 3000-tcp
          protocol: TCP
          port: 3000
          targetPort: 3000
      selector:
        name: ${NAME}-${SUFFIX}
  - apiVersion: v1
    kind: Route
    metadata:
      labels:
        app: ${NAME}-${SUFFIX}
      name: ${NAME}-${SUFFIX}
    spec:
      host: ${NAME}-${SUFFIX}.pathfinder.gov.bc.ca
      port:
        targetPort: 3000-tcp
      to:
        kind: Service
        name: ${NAME}-${SUFFIX}
      tls:
        insecureEdgeTerminationPolicy: Redirect
        termination: edge
