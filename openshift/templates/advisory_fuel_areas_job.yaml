apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: advisory-fuel-areas-job-template
  annotations:
    description: "Template for advisory fuel areas job."
parameters:
  - name: NAME
    description: Module name
    value: wps
  - name: SUFFIX
    description: Deployment suffix, e.g. pr-###
    value: pr-4249
  - name: GLOBAL_NAME
    description: Name of global Module
    value: wps-global
  - name: CRUNCHYDB_USER
    value: wps-crunchydb-16-pr-4249-pguser-wps-crunchydb-16-pr-4249
objects:
  - kind: Job
    apiVersion: batch/v1
    metadata:
      name: advisory-fuel-areas-${NAME}-${SUFFIX}
    spec:
      parallelism: 1
      completions: 1
      backoffLimit: 6
      template:
        spec:
          containers:
            - name: advisory-fuel-areas-container
              image: image-registry.openshift-image-registry.svc:5000/e1e498-tools/wps-api-${SUFFIX}:${SUFFIX}
              command:
                - poetry
                - run
                - python
                - "-m"
                - app.jobs.fuel_type_areas_per_zone
              env:
                - name: POSTGRES_DATABASE
                  value: wps
                - name: POSTGRES_WRITE_USER
                  valueFrom:
                    secretKeyRef:
                      name: ${CRUNCHYDB_USER}
                      key: user
                - name: POSTGRES_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: ${CRUNCHYDB_USER}
                      key: password
                - name: POSTGRES_WRITE_HOST
                  valueFrom:
                    secretKeyRef:
                      name: ${CRUNCHYDB_USER}
                      key: pgbouncer-host
                - name: POSTGRES_PORT
                  valueFrom:
                    secretKeyRef:
                      name: ${CRUNCHYDB_USER}
                      key: pgbouncer-port
                - name: SUFFIX
                  value: ${SUFFIX}
                - name: ROCKET_URL_POST_MESSAGE
                  valueFrom:
                    configMapKeyRef:
                      name: ${GLOBAL_NAME}
                      key: rocket.chat-url-post-message
                - name: ROCKET_CHANNEL
                  valueFrom:
                    configMapKeyRef:
                      name: ${GLOBAL_NAME}
                      key: rocket.chat-channel
                - name: ROCKET_USER_ID
                  valueFrom:
                    secretKeyRef:
                      name: ${GLOBAL_NAME}
                      key: rocket.chat-user-id-secret
                - name: ROCKET_AUTH_TOKEN
                  valueFrom:
                    secretKeyRef:
                      name: ${GLOBAL_NAME}
                      key: rocket.chat-auth-token-secret
                - name: OBJECT_STORE_SERVER
                  valueFrom:
                    secretKeyRef:
                      name: ${GLOBAL_NAME}
                      key: object-store-server
                - name: OBJECT_STORE_USER_ID
                  valueFrom:
                    secretKeyRef:
                      name: ${GLOBAL_NAME}
                      key: object-store-user-id
                - name: OBJECT_STORE_SECRET
                  valueFrom:
                    secretKeyRef:
                      name: ${GLOBAL_NAME}
                      key: object-store-secret
                - name: OBJECT_STORE_BUCKET
                  valueFrom:
                    secretKeyRef:
                      name: ${GLOBAL_NAME}
                      key: object-store-bucket
                - name: FUEL_RASTER_NAME
                  valueFrom:
                    configMapKeyRef:
                      name: ${GLOBAL_NAME}
                      key: env.fuel_raster_name
              resources:
                limits:
                  cpu: "1"
                  memory: 1Gi
                requests:
                  cpu: 500m
                  memory: 512Mi
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              imagePullPolicy: Always
          restartPolicy: OnFailure
          terminationGracePeriodSeconds: 30
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
