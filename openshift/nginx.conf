# For more information on configuration, see:
#   * Official English Documentation: http://nginx.org/en/docs/
error_log /dev/stdout info;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    access_log /dev/stdout;

    server {
        # listen on port 3000
        listen 3000;
        root /opt/app-root/src;

        gzip on;
        # By default, NGINX compresses responses only with MIME type text/html.
        gzip_types application/javascript application/json text/css;

        # force https.
        add_header Content-Security-Policy upgrade-insecure-requests;
        # https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options
        add_header X-Frame-Options DENY;
        # https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Content-Type-Options
        add_header X-Content-Type-Options nosniff;
        # https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control
        # https://www.zaproxy.org/docs/alerts/10015/
        # By default - cache nothing.
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache;";
        # # https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Pragma
        add_header Pragma no-cache;
        # https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP
        # unpkg.com; - leaflet
        add_header Content-Security-Policy "default-src 'unsafe-inline' *.googleapis.com *.gov.bc.ca *.gstatic.com unpkg.com; img-src *.gov.bc.ca blob: data: https:; script-src 'unsafe-inline' 'unsafe-eval' *.gov.bc.ca; frame-ancestors 'none'";
        # https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options
        add_header X-Frame-Options DENY;

        location / {
            # First attempt to serve request as file, then
            # as directory, then fall back to redirecting to index.html
            try_files $uri $uri/ $uri.html /index.html;
        }

        location /health {
            access_log off;
            return 200 "healthy\n";
        }

        location /ready {
            access_log off;
            return 200 "ready\n";
        }

        # https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Content-Type-Options
        location ~* \.(?:css|js|png|xml|svg|json|txt|html|htm)$ {            
          add_header X-Content-Type-Options "nosniff";
        }

        # It's useful to cache some things - so let's create some exceptions.
        location ~* \.(?:woff2|png|js|css|svg)$ {
            expires 30d;
            etag off;
            if_modified_since off;
            add_header Cache-Control "public, no-transform";
        }

    }
}